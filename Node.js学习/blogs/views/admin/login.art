<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>用户登录</title>
    <link rel="stylesheet" href="/admin/lib/bootstrap/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/admin/css/base.css" />
  </head>
  <body>
    <div class="login-body">
      <div class="login-container">
        <h4 class="title">黑马程序员 - 博客管理员登录</h4>
        <div class="login">
          <form action="/admin/login" method="post" id="loginForm">
            <div class="form-group">
              <label>邮件</label>
              <input name="email" type="email" class="form-control" placeholder="请输入邮件地址"/>
            </div>
            <div class="form-group" >
              <label>密码</label>
              <input name="password" type="password" class="form-control" placeholder="请输入密码"/>
            </div>
            <button type="submit" class="btn btn-primary">登录</button>
          </form>
        </div>
        <div class="tips"></div>
      </div>
    </div>
    <script src="/admin/lib/jquery/dist/jquery.min.js"></script>
    <script src="/admin/lib/bootstrap/js/bootstrap.min.js"></script>
    <script src="/admin/js/common.js"></script>
    <script>
      // 给表单设置提交事件
      $("#loginForm").on("submit",function(){
        //获取到当前表单中用户输入的内容 
        var result = serializeToJson($(this))
        //判断用户如果没有输入地址的话
        if(result.email.trim().length == 0){
          // 那么阻止程序向下执行
          alert("请用户输入地址！")
          return false
        }
        // 判断用户如果没有输入密码的话
         if(result.password.trim().length == 0){
          // 那么阻止程序向下执行
          alert("请用户输入密码！")
          return false
        }
      })
    </script>
  </body>
</html>

// 1. 给登录表单设置请求地址和请求方式。
// 2. 给每个input标签设置name属性。
// 3. 给form表单设置id类名。
// 4. 用 jQuery 语法 给表单添加提交事件submit。
// 5. 获取表单用户输入的内容。
// 6. 再然后对表单进行验证，如果验证不通过阻止代码向下执行，并且让表单不去提交。